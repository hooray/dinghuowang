{"version":3,"file":"index-DhuXdB1D.js","sources":["../../src/layouts/components/Topbar/Toolbar/I18n/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { localesName } from '@/locales'\nimport useSettingsStore from '@/store/modules/settings'\n\ndefineOptions({\n  name: 'I18n',\n})\n\nconst settingsStore = useSettingsStore()\n\nconst langItems = computed(() => {\n  return Object.keys(localesName).map((item: any) => ({\n    label: localesName[item],\n    disabled: settingsStore.lang === item,\n    handle: () => settingsStore.setDefaultLang(item),\n  }))\n})\n\nconst isAnimating = ref(false)\n\nwatch(() => settingsStore.lang, (newVal, oldVal) => {\n  if (newVal !== oldVal) {\n    isAnimating.value = true\n  }\n})\n</script>\n\n<template>\n  <FaDropdown :items=\"[langItems]\" @animationend=\"isAnimating = false\">\n    <FaButton variant=\"ghost\" size=\"icon\" :class=\"{ animation: isAnimating }\">\n      <FaIcon name=\"i-ri:translate\" class=\"size-4\" />\n    </FaButton>\n  </FaDropdown>\n</template>\n\n<style scoped>\n.animation {\n  transform-origin: center top;\n  animation: animation 1s;\n}\n\n@keyframes animation {\n  0% {\n    transform: rotateY(0deg);\n  }\n\n  100% {\n    transform: rotateY(360deg);\n  }\n}\n</style>\n"],"names":["settingsStore","useSettingsStore","langItems","computed","localesName","item","isAnimating","ref","watch","newVal","oldVal"],"mappings":"wQAQA,MAAMA,EAAgBC,EAAiB,EAEjCC,EAAYC,EAAS,IAClB,OAAO,KAAKC,CAAW,EAAE,IAAKC,IAAe,CAClD,MAAOD,EAAYC,CAAI,EACvB,SAAUL,EAAc,OAASK,EACjC,OAAQ,IAAML,EAAc,eAAeK,CAAI,CAAA,EAC/C,CACH,EAEKC,EAAcC,EAAI,EAAK,EAE7B,OAAAC,EAAM,IAAMR,EAAc,KAAM,CAACS,EAAQC,IAAW,CAC9CD,IAAWC,IACbJ,EAAY,MAAQ,GACtB,CACD"}