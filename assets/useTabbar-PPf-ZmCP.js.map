{"version":3,"file":"useTabbar-PPf-ZmCP.js","sources":["../../src/utils/composables/useTabbar.ts"],"sourcesContent":["import type { RouteLocationRaw } from 'vue-router'\nimport useSettingsStore from '@/store/modules/settings'\nimport useTabbarStore from '@/store/modules/tabbar'\nimport { toast } from 'vue-sonner'\n\nexport default function useTabbar() {\n  const route = useRoute()\n  const router = useRouter()\n\n  const settingsStore = useSettingsStore()\n  const tabbarStore = useTabbarStore()\n\n  function getId() {\n    return settingsStore.settings.tabbar.mergeTabsBy === 'activeMenu' ? (route.meta.activeMenu ?? route.fullPath) : route.fullPath\n  }\n\n  function open(to: RouteLocationRaw) {\n    const index = tabbarStore.list.findIndex(item => item.tabId === getId())\n    tabbarStore.$patch({\n      leaveIndex: index,\n    })\n    router.push(to)\n  }\n\n  function go(delta: number) {\n    const tabId = getId()\n    router.go(delta)\n    tabbarStore.remove(tabId)\n  }\n\n  function replace(to: RouteLocationRaw) {\n    const tabId = getId()\n    router.replace(to).then(() => {\n      tabbarStore.remove(tabId)\n    })\n  }\n\n  function close(to: RouteLocationRaw) {\n    const tabId = getId()\n    router.push(to).then(() => {\n      tabbarStore.remove(tabId)\n    })\n  }\n\n  function closeById(tabId = getId()) {\n    if (checkClose(tabId, false)) {\n      const activedTabId = getId()\n      // 如果关闭的标签正好是当前路由\n      if (tabId === activedTabId) {\n        const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n        if (index < tabbarStore.list.length - 1) {\n          close(tabbarStore.list[index + 1].fullPath)\n        }\n        else {\n          close(tabbarStore.list[index - 1].fullPath)\n        }\n      }\n      else {\n        tabbarStore.remove(tabId)\n      }\n    }\n  }\n\n  /**\n   * 关闭两侧标签页\n   */\n  function closeOtherSide(tabId = getId()) {\n    const activedTabId = getId()\n    // 如果操作的是非当前路由标签页，则先跳转到指定路由标签页\n    if (tabId !== activedTabId) {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      router.push(tabbarStore.list[index].fullPath)\n    }\n    tabbarStore.removeOtherSide(tabId)\n  }\n\n  /**\n   * 关闭左侧标签页\n   */\n  function closeLeftSide(tabId = getId()) {\n    const activedTabId = getId()\n    // 如果操作的是非当前路由标签页，需要判断当前标签页是否在指定标签页左侧，如果是则先跳转到指定路由标签页\n    if (tabId !== activedTabId) {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      const activedIndex = tabbarStore.list.findIndex(item => item.tabId === activedTabId)\n      if (activedIndex < index) {\n        router.push(tabbarStore.list[index].fullPath)\n      }\n    }\n    tabbarStore.removeLeftSide(tabId)\n  }\n\n  /**\n   * 关闭右侧标签页\n   */\n  function closeRightSide(tabId = getId()) {\n    const activedTabId = getId()\n    // 如果操作的是非当前路由标签页，需要判断当前标签页是否在指定标签页右侧，如果是则先跳转到指定路由标签页\n    if (tabId !== activedTabId) {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      const activedIndex = tabbarStore.list.findIndex(item => item.tabId === activedTabId)\n      if (activedIndex > index) {\n        router.push(tabbarStore.list[index].fullPath)\n      }\n    }\n    tabbarStore.removeRightSide(tabId)\n  }\n\n  /**\n   * 校验指定标签是否可关闭\n   */\n  function checkClose(tabId = getId(), checkOnly = true) {\n    let flag = true\n    const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n    if (index < 0) {\n      flag = false\n      !checkOnly && toast.warning('关闭的标签页不存在', {\n        position: 'top-center',\n      })\n    }\n    else if (tabbarStore.list.length <= 1) {\n      flag = false\n      !checkOnly && toast.warning('当前只有一个标签页，不可关闭', {\n        position: 'top-center',\n      })\n    }\n    else if (tabbarStore.list[index].isPermanent) {\n      flag = false\n      !checkOnly && toast.warning('该标签页为常驻，不可关闭', {\n        position: 'top-center',\n      })\n    }\n    else if (tabbarStore.list[index].isPin) {\n      flag = false\n      !checkOnly && toast.warning('该标签页为固定，不可关闭', {\n        position: 'top-center',\n      })\n    }\n    return flag\n  }\n\n  /**\n   * 校验指定标签两侧是否有可关闭的标签\n   */\n  function checkCloseOtherSide(tabId = getId()) {\n    return tabbarStore.list.some((item) => {\n      return !item.isPermanent && !item.isPin && item.tabId !== tabId\n    })\n  }\n\n  /**\n   * 校验指定标签左侧是否有可关闭的标签\n   */\n  function checkCloseLeftSide(tabId = getId()) {\n    let flag = true\n    if (tabId === tabbarStore.list[0]?.tabId) {\n      flag = false\n    }\n    else {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      flag = tabbarStore.list.some((item, i) => {\n        return i < index && !item.isPermanent && !item.isPin && item.tabId !== tabId\n      })\n    }\n    return flag\n  }\n\n  /**\n   * 校验指定标签右侧是否有可关闭的标签\n   */\n  function checkCloseRightSide(tabId = getId()) {\n    let flag = true\n    if (tabId === tabbarStore.list.at(-1)?.tabId) {\n      flag = false\n    }\n    else {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      flag = tabbarStore.list.some((item, i) => {\n        return i >= index && !item.isPermanent && !item.isPin && item.tabId !== tabId\n      })\n    }\n    return flag\n  }\n\n  return {\n    getId,\n    open,\n    go,\n    replace,\n    close,\n    closeById,\n    closeOtherSide,\n    closeLeftSide,\n    closeRightSide,\n    checkClose,\n    checkCloseOtherSide,\n    checkCloseLeftSide,\n    checkCloseRightSide,\n  }\n}\n"],"names":["useTabbar","route","useRoute","router","useRouter","settingsStore","useSettingsStore","tabbarStore","useTabbarStore","getId","open","to","index","item","go","delta","tabId","replace","close","closeById","checkClose","activedTabId","closeOtherSide","closeLeftSide","closeRightSide","checkOnly","flag","toast","checkCloseOtherSide","checkCloseLeftSide","_a","i","checkCloseRightSide"],"mappings":"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"}