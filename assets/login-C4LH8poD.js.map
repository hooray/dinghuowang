{"version":3,"file":"login-C4LH8poD.js","sources":["../../src/assets/images/logo.svg","../../src/assets/images/login-banner.png","../../src/ui/components/FaCheckbox/checkbox/Checkbox.vue","../../src/ui/components/FaCheckbox/index.vue","../../src/components/AccountForm/LoginForm.vue","../../src/ui/components/FaPasswordStrength/index.vue","../../src/components/AccountForm/RegisterForm.vue","../../src/ui/components/FaPinInput/pin-input/PinInput.vue","../../src/ui/components/FaPinInput/pin-input/PinInputGroup.vue","../../src/ui/components/FaPinInput/pin-input/PinInputInput.vue","../../src/ui/components/FaPinInput/index.vue","../../src/components/AccountForm/ResetPasswordForm.vue","../../src/views/login.vue"],"sourcesContent":["export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='-25%20-46%20256%20256'%20xml:space='preserve'%3e%3cpath%20d='M0,82.57C0,58.4,0,34.23,0,10.06C0,1.35,1.35,0,10.03,0C45.36,0,80.7-0.01,116.03,0.03c1.77,0,3.59,0.26,5.29,0.74%20c3.07,0.87,3.57,3.21,2.45,5.8c-4.37,10.1-8.83,20.15-13.31,30.2c-1.44,3.23-4.06,4.26-7.54,4.25c-18.5-0.09-37,0.1-55.5-0.14%20c-4.95-0.06-6.49,2.12-6.46,6.47c0.02,3,0.11,6.01-0.02,9c-0.3,6.8,0.34,9.29,9.51,9.62c5.36,0.19,10.73,0.04,16.09,0.04%20c7.57,0,15.15-0.04,22.72,0.01c5.13,0.03,6.6,2.12,4.59,6.89C90.43,81.09,86.27,89,83.4,97.35c-2.59,7.55-8.57,7.27-14.28,7.56%20c-7.48,0.38-15,0.17-22.5,0.06c-3.69-0.05-4.96,1.04-4.86,5.18c0.36,15.83,0.26,31.67,0.12,47.5c-0.04,4.2-2.26,6.53-6.94,6.42%20c-9-0.21-18-0.06-27-0.06c-6.05,0-7.91-1.8-7.92-7.94C-0.02,131.57,0,107.07,0,82.57z'%20fill='%2335495e'%20/%3e%3cpath%20d='M132.98,94.13c-8.21,18.88-16.33,37.1-24.06,55.48c-6.02,14.31-5.81,14.4-21.31,14.4c-6.67,0-13.33,0.05-20-0.01%20c-5.91-0.05-7.71-2.44-5.46-7.61c6.86-15.8,13.86-31.55,20.82-47.31c9.41-21.32,18.81-42.63,28.24-63.94%20c5.59-12.62,11.14-25.25,16.94-37.77c0.82-1.78,2.95-4.09,4.47-4.09c1.63,0,4,2.11,4.78,3.86c13.4,29.78,26.56,59.66,39.87,89.49%20c6.48,14.53,13.16,28.97,19.72,43.46c2.57,5.68,5.11,11.38,7.61,17.1c1.61,3.68-0.13,6.75-4.12,6.77%20c-23.83,0.08-47.66,0.09-71.49-0.01c-4.03-0.02-5.46-2.47-3.98-6.17c2.26-5.63,4.77-11.16,6.95-16.82c1.74-4.54,4.92-6.06,9.6-5.98%20c9.65,0.16,9.89-0.55,5.89-9.13c-4.57-9.81-8.76-19.8-13.14-29.7C134.08,95.62,133.68,95.17,132.98,94.13z'%20fill='%2342b883'%20/%3e%3c/svg%3e\"","export default \"__VITE_ASSET__BjSVEo1p__\"","<script setup lang=\"ts\">\nimport type { CheckboxRootEmits, CheckboxRootProps } from 'radix-vue'\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/utils'\nimport { Check } from 'lucide-vue-next'\nimport { CheckboxIndicator, CheckboxRoot, useForwardPropsEmits } from 'radix-vue'\nimport { computed } from 'vue'\n\nconst props = defineProps<CheckboxRootProps & { class?: HTMLAttributes['class'] }>()\nconst emits = defineEmits<CheckboxRootEmits>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <CheckboxRoot\n    v-bind=\"forwarded\"\n    :class=\"cn('peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground', props.class)\"\n  >\n    <CheckboxIndicator class=\"h-full w-full flex items-center justify-center text-current\">\n      <slot>\n        <Check class=\"h-4 w-4\" />\n      </slot>\n    </CheckboxIndicator>\n  </CheckboxRoot>\n</template>\n","<script setup lang=\"ts\">\nimport { Checkbox } from './checkbox'\n\ndefineOptions({\n  name: 'FaCheckbox',\n})\n\ndefineProps<{\n  disabled?: boolean\n}>()\n\nconst value = defineModel<boolean>()\n\nconst id = useId()\n</script>\n\n<template>\n  <div class=\"flex-center-start gap-2\">\n    <Checkbox :id v-model:checked=\"value\" :disabled />\n    <label :for=\"id\" class=\"cursor-pointer text-sm\">\n      <slot />\n    </label>\n  </div>\n</template>\n","<i18n lang=\"json\">\n{\n  \"zh-cn\": {\n    \"accountLogin\": \"账号密码登录\",\n    \"qrcodeLogin\": \"扫码登录\",\n    \"intro\": \"欢迎使用 👋🏻\",\n    \"remember\": \"记住我\",\n    \"forget\": \"忘记密码了?\",\n    \"noAccount\": \"还没有帐号?\",\n    \"register\": \"注册新帐号\",\n    \"wechatQrcode\": \"请使用微信扫码登录\",\n    \"testLogin\": \"演示账号一键登录\",\n    \"form\": {\n      \"account\": \"用户名\",\n      \"password\": \"密码\",\n      \"login\": \"登录\"\n    },\n    \"rules\": {\n      \"account\": \"请输入用户名\",\n      \"password\": \"请输入密码\"\n    }\n  },\n  \"zh-tw\": {\n    \"accountLogin\": \"帳號密碼登入\",\n    \"qrcodeLogin\": \"掃碼登入\",\n    \"intro\": \"歡迎使用 👋🏻\",\n    \"remember\": \"記住我\",\n    \"forget\": \"忘記密碼了?\",\n    \"noAccount\": \"還沒有帳號?\",\n    \"register\": \"註冊新帳號\",\n    \"wechatQrcode\": \"請使用微信掃碼登入\",\n    \"testLogin\": \"演示帳號一键登入\",\n    \"form\": {\n      \"account\": \"用戶名\",\n      \"password\": \"密碼\",\n      \"login\": \"登入\"\n    },\n    \"rules\": {\n      \"account\": \"請輸入用戶名\",\n      \"password\": \"請輸入密碼\"\n    }\n  },\n  \"en\": {\n    \"accountLogin\": \"Account Login\",\n    \"qrcodeLogin\": \"Scan Login\",\n    \"intro\": \"Welcome aboard 👋🏻\",\n    \"remember\": \"Remember Me\",\n    \"forget\": \"Forget Password?\",\n    \"noAccount\": \"No Account?\",\n    \"register\": \"Register New Account\",\n    \"wechatQrcode\": \"Please use WeChat scan login\",\n    \"testLogin\": \"Demo Account One-click Login\",\n    \"form\": {\n      \"account\": \"Account\",\n      \"password\": \"Password\",\n      \"login\": \"Login\"\n    },\n    \"rules\": {\n      \"account\": \"Please enter the account\",\n      \"password\": \"Please enter the password\"\n    }\n  }\n}\n</i18n>\n\n<script setup lang=\"ts\">\nimport useUserStore from '@/store/modules/user'\nimport { FormControl, FormField, FormItem, FormMessage } from '@/ui/shadcn/ui/form'\nimport storage from '@/utils/storage'\nimport { toTypedSchema } from '@vee-validate/zod'\nimport { useForm } from 'vee-validate'\nimport { useI18n } from 'vue-i18n'\nimport * as z from 'zod'\n\ndefineOptions({\n  name: 'LoginForm',\n})\n\nconst props = defineProps<{\n  account?: string\n}>()\n\nconst emits = defineEmits<{\n  onLogin: [account?: string]\n  onRegister: [account?: string]\n  onResetPassword: [account?: string]\n}>()\n\nconst { t } = useI18n()\nconst userStore = useUserStore()\n\nconst title = '订货王'\nconst loading = ref(false)\n\n// 登录方式，default 账号密码登录，qrcode 扫码登录\nconst type = ref<'default' | 'qrcode'>('default')\n\nconst form = useForm({\n  validationSchema: toTypedSchema(z.object({\n    account: z.string().min(1, t('rules.account')),\n    password: z.string().min(1, t('rules.password')),\n    remember: z.boolean(),\n  })),\n  initialValues: {\n    account: props.account ?? storage.local.get('login_account') ?? '',\n    password: '',\n    remember: storage.local.has('login_account'),\n  },\n})\nconst onSubmit = form.handleSubmit((values) => {\n  loading.value = true\n  userStore.login(values).then(() => {\n    if (values.remember) {\n      storage.local.set('login_account', values.account)\n    }\n    else {\n      storage.local.remove('login_account')\n    }\n    emits('onLogin', values.account)\n  }).finally(() => {\n    loading.value = false\n  })\n})\n\nfunction testAccount(account: string) {\n  form.setFieldValue('account', account)\n  form.setFieldValue('password', '123456')\n  onSubmit()\n}\n</script>\n\n<template>\n  <div class=\"min-h-500px w-full flex-col-stretch-center p-12\">\n    <div class=\"mb-6 space-y-2\">\n      <h3 class=\"text-4xl color-[var(--el-text-color-primary)] font-bold\">\n        {{ t('intro') }}\n      </h3>\n      <p class=\"text-sm text-muted-foreground lg:text-base\">\n        {{ title }}\n      </p>\n    </div>\n    <div class=\"mb-4\">\n      <FaTabs\n        v-model=\"type\" :list=\"[\n          { label: t('accountLogin'), value: 'default' },\n          { label: t('qrcodeLogin'), value: 'qrcode' },\n        ]\" class=\"inline-flex\"\n      />\n    </div>\n    <div v-show=\"type === 'default'\">\n      <form @submit=\"onSubmit\">\n        <FormField v-slot=\"{ componentField, errors }\" name=\"account\">\n          <FormItem class=\"relative pb-6 space-y-0\">\n            <FormControl>\n              <FaInput type=\"text\" :placeholder=\"t('form.account')\" class=\"w-full\" :class=\"errors.length && 'border-destructive'\" v-bind=\"componentField\" />\n            </FormControl>\n            <Transition enter-active-class=\"transition-opacity\" enter-from-class=\"opacity-0\" leave-active-class=\"transition-opacity\" leave-to-class=\"opacity-0\">\n              <FormMessage class=\"absolute bottom-1 text-xs\" />\n            </Transition>\n          </FormItem>\n        </FormField>\n        <FormField v-slot=\"{ componentField, errors }\" name=\"password\">\n          <FormItem class=\"relative pb-6 space-y-0\">\n            <FormControl>\n              <FaInput type=\"password\" :placeholder=\"t('form.password')\" class=\"w-full\" :class=\"errors.length && 'border-destructive'\" v-bind=\"componentField\" />\n            </FormControl>\n            <Transition enter-active-class=\"transition-opacity\" enter-from-class=\"opacity-0\" leave-active-class=\"transition-opacity\" leave-to-class=\"opacity-0\">\n              <FormMessage class=\"absolute bottom-1 text-xs\" />\n            </Transition>\n          </FormItem>\n        </FormField>\n        <div class=\"mb-4 flex-center-between\">\n          <div class=\"flex-center-start\">\n            <FormField v-slot=\"{ componentField }\" type=\"checkbox\" name=\"remember\">\n              <FormItem>\n                <FormControl>\n                  <FaCheckbox v-bind=\"componentField\">\n                    {{ t('remember') }}\n                  </FaCheckbox>\n                </FormControl>\n              </FormItem>\n            </FormField>\n          </div>\n          <FaButton variant=\"link\" class=\"h-auto p-0\" type=\"button\" @click=\"emits('onResetPassword', form.values.account)\">\n            {{ t('forget') }}\n          </FaButton>\n        </div>\n        <FaButton :loading=\"loading\" size=\"lg\" class=\"w-full\" type=\"submit\">\n          {{ t('form.login') }}\n        </FaButton>\n        <div class=\"mt-4 flex-center gap-2 text-sm\">\n          <span class=\"text-secondary-foreground op-50\">{{ t('noAccount') }}</span>\n          <FaButton variant=\"link\" class=\"h-auto p-0\" type=\"button\" @click=\"emits('onRegister', form.values.account)\">\n            {{ t('register') }}\n          </FaButton>\n        </div>\n      </form>\n      <div class=\"mt-4 text-center -mb-4\">\n        <FaDivider>{{ t('testLogin') }}</FaDivider>\n        <div class=\"space-x-2\">\n          <FaButton variant=\"default\" size=\"sm\" plain @click=\"testAccount('admin')\">\n            admin\n          </FaButton>\n          <FaButton variant=\"outline\" size=\"sm\" plain @click=\"testAccount('test')\">\n            test\n          </FaButton>\n        </div>\n      </div>\n    </div>\n    <div v-show=\"type === 'qrcode'\">\n      <div class=\"flex-col-center\">\n        <img src=\"https://s2.loli.net/2024/04/26/GsahtuIZ9XOg5jr.png\" class=\"h-[250px] w-[250px]\">\n        <div class=\"mt-2 text-sm text-secondary-foreground op-50\">\n          {{ t('wechatQrcode') }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<i18n lang=\"yaml\">\nzh-cn:\n  tips: 建议\n  hasLength: 长度至少为8个字符\n  hasUppercase: 包含大写字母\n  hasLowercase: 包含小写字母\n  hasNumber: 包含数字\n  hasSpecialChar: 包含特殊字符\nzh-tw:\n  tips: 建議\n  hasLength: 長度至少為8個字符\n  hasUppercase: 包含大寫字母\n  hasLowercase: 包含小寫字母\n  hasNumber: 包含數字\n  hasSpecialChar: 包含特殊字符\nen:\n  tips: Suggestion\n  hasLength: At least 8 characters\n  hasUppercase: Contains uppercase letters\n  hasLowercase: Contains lowercase letters\n  hasNumber: Contains numbers\n  hasSpecialChar: Contains special characters\n</i18n>\n\n<script setup lang=\"ts\">\nimport { useI18n } from 'vue-i18n'\n\ndefineOptions({\n  name: 'FaPasswordStrength',\n})\n\nconst props = withDefaults(\n  defineProps<{\n    password?: string\n  }>(),\n  {\n    password: '',\n  },\n)\n\nconst { t } = useI18n()\n\nconst maxStrength = 5\n\nconst hasLength = computed(() => props.password.length >= 8)\nconst hasUppercase = computed(() => /[A-Z]/.test(props.password))\nconst hasLowercase = computed(() => /[a-z]/.test(props.password))\nconst hasNumber = computed(() => /\\d/.test(props.password))\nconst hasSpecialChar = computed(() => /[^A-Z0-9]/i.test(props.password))\n\nconst strength = computed(() => {\n  let score = 0\n  if (hasLength.value) {\n    score++\n  }\n  if (hasUppercase.value) {\n    score++\n  }\n  if (hasLowercase.value) {\n    score++\n  }\n  if (hasNumber.value) {\n    score++\n  }\n  if (hasSpecialChar.value) {\n    score++\n  }\n  return score\n})\n\nconst strengthColor = computed(() => {\n  if (strength.value === 0) {\n    return 'bg-red-500'\n  }\n  if (strength.value < 3) {\n    return 'bg-orange-500'\n  }\n  if (strength.value < 5) {\n    return 'bg-yellow-500'\n  }\n  return 'bg-green-500'\n})\n</script>\n\n<template>\n  <div class=\"w-full flex-center gap-2\">\n    <div class=\"h-2 flex-1 overflow-hidden rounded-full bg-border\">\n      <div\n        :class=\"strengthColor\"\n        :style=\"{ width: `${(strength / maxStrength) * 100}%` }\"\n        class=\"h-full transition-all duration-300 ease-out\"\n      />\n    </div>\n    <FaTooltip>\n      <FaIcon name=\"i-ri:question-line\" class=\"cursor-help text-sm text-muted-foreground\" />\n      <template #content>\n        <div class=\"py-1\">\n          <div class=\"mb-1 text-sm text-muted-foreground\">\n            {{ t('tips') }}\n          </div>\n          <ul class=\"text-sm text-muted-foreground space-y-1\">\n            <li class=\"flex-center-start gap-1\" :class=\"{ 'text-green-600': hasLength }\">\n              <FaIcon :name=\"hasLength ? 'i-carbon:checkmark' : 'i-carbon:close'\" />\n              {{ t('hasLength') }}\n            </li>\n            <li class=\"flex-center-start gap-1\" :class=\"{ 'text-green-600': hasUppercase }\">\n              <FaIcon :name=\"hasUppercase ? 'i-carbon:checkmark' : 'i-carbon:close'\" />\n              {{ t('hasUppercase') }}\n            </li>\n            <li class=\"flex-center-start gap-1\" :class=\"{ 'text-green-600': hasLowercase }\">\n              <FaIcon :name=\"hasLowercase ? 'i-carbon:checkmark' : 'i-carbon:close'\" />\n              {{ t('hasLowercase') }}\n            </li>\n            <li class=\"flex-center-start gap-1\" :class=\"{ 'text-green-600': hasNumber }\">\n              <FaIcon :name=\"hasNumber ? 'i-carbon:checkmark' : 'i-carbon:close'\" />\n              {{ t('hasNumber') }}\n            </li>\n            <li class=\"flex-center-start gap-1\" :class=\"{ 'text-green-600': hasSpecialChar }\">\n              <FaIcon :name=\"hasSpecialChar ? 'i-carbon:checkmark' : 'i-carbon:close'\" />\n              {{ t('hasSpecialChar') }}\n            </li>\n          </ul>\n        </div>\n      </template>\n    </FaTooltip>\n  </div>\n</template>\n","<i18n lang=\"json\">\n{\n  \"zh-cn\": {\n    \"intro\": \"探索从这里开始 🚀\",\n    \"hasAccount\": \"已经有帐号?\",\n    \"login\": \"去登录\",\n    \"form\": {\n      \"account\": \"用户名\",\n      \"captcha\": \"验证码\",\n      \"sendCaptcha\": \"发送验证码\",\n      \"password\": \"密码\",\n      \"checkPassword\": \"确认密码\",\n      \"register\": \"注册\"\n    },\n    \"rules\": {\n      \"account\": \"请输入用户名\",\n      \"captcha\": \"请输入验证码\",\n      \"password\": \"请输入密码\",\n      \"passwordLength\": \"密码长度为6到18位\",\n      \"checkPassword\": \"请再次输入密码\",\n      \"checkPasswordError\": \"两次输入的密码不一致\"\n    }\n  },\n  \"zh-tw\": {\n    \"intro\": \"探索從這裡開始 🚀\",\n    \"hasAccount\": \"已有帳號?\",\n    \"login\": \"去登入\",\n    \"form\": {\n      \"account\": \"用戶名\",\n      \"captcha\": \"驗證碼\",\n      \"sendCaptcha\": \"發送驗證碼\",\n      \"password\": \"密碼\",\n      \"checkPassword\": \"確認密碼\",\n      \"register\": \"註冊\"\n    },\n    \"rules\": {\n      \"account\": \"請輸入用戶名\",\n      \"captcha\": \"請輸入驗證碼\",\n      \"password\": \"請輸入密碼\",\n      \"passwordLength\": \"密碼長度為6到18位\",\n      \"checkPassword\": \"請再次輸入密碼\",\n      \"checkPasswordError\": \"兩次輸入的密碼不一致\"\n    }\n  },\n  \"en\": {\n    \"intro\": \"Explore from here 🚀\",\n    \"hasAccount\": \"Already have an account?\",\n    \"login\": \"Login\",\n    \"form\": {\n      \"account\": \"Account\",\n      \"captcha\": \"Captcha\",\n      \"sendCaptcha\": \"Send Captcha\",\n      \"password\": \"Password\",\n      \"checkPassword\": \"Check Password\",\n      \"register\": \"Register\"\n    },\n    \"rules\": {\n      \"account\": \"Please enter an account\",\n      \"captcha\": \"Please enter a captcha\",\n      \"password\": \"Please enter a password\",\n      \"passwordLength\": \"Password length is 6 to 18 bits\",\n      \"checkPassword\": \"Please enter the password again\",\n      \"checkPasswordError\": \"The two passwords entered are inconsistent\"\n    }\n  }\n}\n</i18n>\n\n<script setup lang=\"ts\">\nimport { FormControl, FormField, FormItem, FormMessage } from '@/ui/shadcn/ui/form'\nimport { toTypedSchema } from '@vee-validate/zod'\nimport { useForm } from 'vee-validate'\nimport { useI18n } from 'vue-i18n'\nimport * as z from 'zod'\n\ndefineOptions({\n  name: 'RegisterForm',\n})\n\nconst props = defineProps<{\n  account?: string\n}>()\n\nconst emits = defineEmits<{\n  onLogin: [account?: string]\n  onRegister: [account?: string]\n}>()\n\nconst { t } = useI18n()\n\nconst loading = ref(false)\n\nconst form = useForm({\n  validationSchema: toTypedSchema(\n    z.object({\n      account: z.string().min(1, t('rules.account')),\n      captcha: z.string().min(6, t('rules.captcha')),\n      password: z.string().min(1, t('rules.password')).min(6, t('rules.passwordLength')).max(18, t('rules.passwordLength')),\n      checkPassword: z.string().min(1, t('rules.checkPassword')),\n    }).refine(data => data.password === data.checkPassword, {\n      message: t('rules.checkPasswordError'),\n      path: ['checkPassword'],\n    }),\n  ),\n  initialValues: {\n    account: props.account ?? '',\n    captcha: '',\n    password: '',\n    checkPassword: '',\n  },\n})\nconst onSubmit = form.handleSubmit((values) => {\n  loading.value = true\n  emits('onRegister', values.account)\n})\n</script>\n\n<template>\n  <div class=\"min-h-500px w-full flex-col-stretch-center p-12\">\n    <form @submit=\"onSubmit\">\n      <div class=\"mb-8 space-y-2\">\n        <h3 class=\"text-4xl color-[var(--el-text-color-primary)] font-bold\">\n          {{ t('intro') }}\n        </h3>\n        <p class=\"text-sm text-muted-foreground lg:text-base\">\n          演示系统未提供该功能\n        </p>\n      </div>\n      <FormField v-slot=\"{ componentField, errors }\" name=\"account\">\n        <FormItem class=\"relative pb-6 space-y-0\">\n          <FormControl>\n            <FaInput type=\"text\" :placeholder=\"t('form.account')\" class=\"w-full\" :class=\"errors.length && 'border-destructive'\" v-bind=\"componentField\" />\n          </FormControl>\n          <Transition enter-active-class=\"transition-opacity\" enter-from-class=\"opacity-0\" leave-active-class=\"transition-opacity\" leave-to-class=\"opacity-0\">\n            <FormMessage class=\"absolute bottom-1 text-xs\" />\n          </Transition>\n        </FormItem>\n      </FormField>\n      <FormField v-slot=\"{ componentField, value, errors }\" name=\"password\">\n        <FormItem class=\"relative pb-6 space-y-0\">\n          <FormControl>\n            <FaInput type=\"password\" :placeholder=\"t('form.password')\" class=\"w-full\" :class=\"errors.length && 'border-destructive'\" v-bind=\"componentField\" />\n          </FormControl>\n          <FormDescription>\n            <FaPasswordStrength :password=\"value\" class=\"mt-2\" />\n          </FormDescription>\n          <Transition enter-active-class=\"transition-opacity\" enter-from-class=\"opacity-0\" leave-active-class=\"transition-opacity\" leave-to-class=\"opacity-0\">\n            <FormMessage class=\"absolute bottom-1 text-xs\" />\n          </Transition>\n        </FormItem>\n      </FormField>\n      <FormField v-slot=\"{ componentField, errors }\" name=\"checkPassword\">\n        <FormItem class=\"relative pb-6 space-y-0\">\n          <FormControl>\n            <FaInput type=\"password\" :placeholder=\"t('form.checkPassword')\" class=\"w-full\" :class=\"errors.length && 'border-destructive'\" v-bind=\"componentField\" />\n          </FormControl>\n          <Transition enter-active-class=\"transition-opacity\" enter-from-class=\"opacity-0\" leave-active-class=\"transition-opacity\" leave-to-class=\"opacity-0\">\n            <FormMessage class=\"absolute bottom-1 text-xs\" />\n          </Transition>\n        </FormItem>\n      </FormField>\n      <FaButton :loading=\"loading\" size=\"lg\" class=\"mt-4 w-full\" type=\"submit\">\n        {{ t('form.register') }}\n      </FaButton>\n      <div class=\"mt-4 flex-center gap-2 text-sm\">\n        <span class=\"text-secondary-foreground op-50\">{{ t('hasAccount') }}</span>\n        <FaButton variant=\"link\" class=\"h-auto p-0\" @click=\"emits('onLogin', form.values.account)\">\n          {{ t('login') }}\n        </FaButton>\n      </div>\n    </form>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { PinInputRootEmits, PinInputRootProps } from 'radix-vue'\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/utils'\nimport { PinInputRoot, useForwardPropsEmits } from 'radix-vue'\nimport { computed } from 'vue'\n\nconst props = withDefaults(defineProps<PinInputRootProps & { class?: HTMLAttributes['class'] }>(), {\n  modelValue: () => [],\n})\nconst emits = defineEmits<PinInputRootEmits>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n  return delegated\n})\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <PinInputRoot v-bind=\"forwarded\" :class=\"cn('flex gap-2 items-center', props.class)\">\n    <slot />\n  </PinInputRoot>\n</template>\n","<script setup lang=\"ts\">\nimport type { PrimitiveProps } from 'radix-vue'\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/utils'\nimport { Primitive, useForwardProps } from 'radix-vue'\nimport { computed } from 'vue'\n\nconst props = defineProps<PrimitiveProps & { class?: HTMLAttributes['class'] }>()\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n  return delegated\n})\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <Primitive v-bind=\"forwardedProps\" :class=\"cn('flex items-center', props.class)\">\n    <slot />\n  </primitive>\n</template>\n","<script setup lang=\"ts\">\nimport type { PinInputInputProps } from 'radix-vue'\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/utils'\nimport { PinInputInput, useForwardProps } from 'radix-vue'\nimport { computed } from 'vue'\n\nconst props = defineProps<PinInputInputProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <PinInputInput v-bind=\"forwardedProps\" :class=\"cn('relative text-center focus:outline-none focus:ring-2 focus:ring-ring focus:relative focus:z-10 flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md', props.class)\" />\n</template>\n","<script setup lang=\"ts\">\nimport { PinInput, PinInputGroup, PinInputInput } from './pin-input'\n\ndefineOptions({\n  name: 'FaPinInput',\n})\n\nwithDefaults(\n  defineProps<{\n    length?: number\n  }>(),\n  {\n    length: 6,\n  },\n)\n\nconst emit = defineEmits<{\n  complete: []\n}>()\n\nconst modelValue = defineModel<string>()\n\nconst value = ref<string[]>([])\n\nwatch(modelValue, (val) => {\n  value.value = val?.split('') ?? []\n})\n\nwatch(value, (val) => {\n  modelValue.value = val.join('')\n})\n\nfunction handleComplete(e: string[]) {\n  modelValue.value = e.join('')\n  emit('complete')\n}\n\nconst id = useId()\n</script>\n\n<template>\n  <PinInput :id :model-value=\"value\" placeholder=\"○\" otp type=\"number\" @complete=\"handleComplete\" @update:model-value=\"arrStr => value = arrStr.filter(Boolean)\">\n    <PinInputGroup>\n      <PinInputInput v-for=\"(item, index) in length\" :key=\"item\" :index=\"index\" />\n    </PinInputGroup>\n  </PinInput>\n</template>\n","<i18n lang=\"json\">\n{\n  \"zh-cn\": {\n    \"intro\": \"忘记密码了? 🔒\",\n    \"login\": \"去登录\",\n    \"form\": {\n      \"account\": \"用户名\",\n      \"captcha\": \"验证码\",\n      \"sendCaptcha\": \"发送验证码\",\n      \"captchaCountdown\": \"{0} 秒后可重新发送\",\n      \"newPassword\": \"新密码\",\n      \"confirm\": \"确认\"\n    },\n    \"rules\": {\n      \"account\": \"请输入用户名\",\n      \"captcha\": \"请输入验证码\",\n      \"newPassword\": \"请输入新密码\",\n      \"newPasswordLength\": \"密码长度为6到18位\"\n    }\n  },\n  \"zh-tw\": {\n    \"intro\": \"忘記密碼了? 🔒\",\n    \"login\": \"去登錄\",\n    \"form\": {\n      \"account\": \"用戶名\",\n      \"captcha\": \"驗證碼\",\n      \"sendCaptcha\": \"發送驗證碼\",\n      \"captchaCountdown\": \"{0} 秒後可重新發送\",\n      \"newPassword\": \"新密碼\",\n      \"confirm\": \"確認\"\n    },\n    \"rules\": {\n      \"account\": \"請輸入用戶名\",\n      \"captcha\": \"請輸入驗證碼\",\n      \"newPassword\": \"請輸入新密碼\",\n      \"newPasswordLength\": \"密碼長度為6到18位\"\n    }\n  },\n  \"en\": {\n    \"intro\": \"Forget password? 🔒\",\n    \"login\": \"Go to login\",\n    \"form\": {\n      \"account\": \"Account\",\n      \"captcha\": \"Captcha\",\n      \"sendCaptcha\": \"Send Captcha\",\n      \"captchaCountdown\": \"Can resend in {0}s\",\n      \"newPassword\": \"New Password\",\n      \"confirm\": \"Confirm\"\n    },\n    \"rules\": {\n      \"account\": \"Please enter account\",\n      \"captcha\": \"Please enter captcha\",\n      \"newPassword\": \"Please enter new password\",\n      \"newPasswordLength\": \"The length of the password is 6 to 18 bits\"\n    }\n  }\n}\n</i18n>\n\n<script setup lang=\"ts\">\nimport { FormControl, FormField, FormItem, FormMessage } from '@/ui/shadcn/ui/form'\nimport { toTypedSchema } from '@vee-validate/zod'\nimport { useForm } from 'vee-validate'\nimport { useI18n } from 'vue-i18n'\nimport * as z from 'zod'\n\ndefineOptions({\n  name: 'ResetPasswordForm',\n})\n\nconst props = defineProps<{\n  account?: string\n}>()\n\nconst emits = defineEmits<{\n  onLogin: [account?: string]\n  onResetPassword: [account?: string]\n}>()\n\nconst { t } = useI18n()\n\nconst loading = ref(false)\n\nconst form = useForm({\n  validationSchema: toTypedSchema(z.object({\n    account: z.string().min(1, t('rules.account')),\n    captcha: z.string().min(6, t('rules.captcha')),\n    newPassword: z.string().min(1, t('rules.newPassword')).min(6, t('rules.newPasswordLength')).max(18, t('rules.newPasswordLength')),\n  })),\n  initialValues: {\n    account: props.account ?? '',\n    captcha: '',\n    newPassword: '',\n  },\n})\nconst onSubmit = form.handleSubmit((values) => {\n  loading.value = true\n  emits('onResetPassword', values.account)\n})\n\nconst countdown = ref(0)\nconst countdownInterval = ref(Number.NaN)\nfunction handleSendCaptcha() {\n  countdown.value = 60\n  countdownInterval.value = window.setInterval(() => {\n    countdown.value--\n    if (countdown.value === 0) {\n      clearInterval(countdownInterval.value)\n    }\n  }, 1000)\n}\n</script>\n\n<template>\n  <div class=\"min-h-500px w-full flex-col-stretch-center p-12\">\n    <form @submit=\"onSubmit\">\n      <div class=\"mb-8 space-y-2\">\n        <h3 class=\"text-4xl color-[var(--el-text-color-primary)] font-bold\">\n          {{ t('intro') }}\n        </h3>\n        <p class=\"text-sm text-muted-foreground lg:text-base\">\n          演示系统未提供该功能\n        </p>\n      </div>\n      <FormField v-slot=\"{ componentField, errors }\" name=\"account\">\n        <FormItem class=\"relative pb-6 space-y-0\">\n          <FormControl>\n            <FaInput type=\"text\" :placeholder=\"t('form.account')\" class=\"w-full\" :class=\"errors.length && 'border-destructive'\" v-bind=\"componentField\" />\n          </FormControl>\n          <Transition enter-active-class=\"transition-opacity\" enter-from-class=\"opacity-0\" leave-active-class=\"transition-opacity\" leave-to-class=\"opacity-0\">\n            <FormMessage class=\"absolute bottom-1 text-xs\" />\n          </Transition>\n        </FormItem>\n      </FormField>\n      <div class=\"flex-start-between gap-2\">\n        <FormField v-slot=\"{ componentField, value, setValue }\" name=\"captcha\">\n          <FormItem class=\"relative pb-6 space-y-0\">\n            <FormControl>\n              <FaPinInput :model-value=\"value\" :name=\"componentField.name\" :length=\"6\" class=\"border-destructive\" @update:model-value=\"val => setValue(val)\" />\n            </FormControl>\n            <Transition enter-active-class=\"transition-opacity\" enter-from-class=\"opacity-0\" leave-active-class=\"transition-opacity\" leave-to-class=\"opacity-0\">\n              <FormMessage class=\"absolute bottom-1 text-xs\" />\n            </Transition>\n          </FormItem>\n        </FormField>\n        <FaButton variant=\"outline\" size=\"lg\" :disabled=\"countdown > 0\" class=\"flex-1 px-4\" @click=\"handleSendCaptcha\">\n          {{ countdown === 0 ? t('form.sendCaptcha') : t('form.captchaCountdown', [countdown]) }}\n        </FaButton>\n      </div>\n      <FormField v-slot=\"{ componentField, errors }\" name=\"newPassword\">\n        <FormItem class=\"relative pb-6 space-y-0\">\n          <FormControl>\n            <FaInput type=\"password\" :placeholder=\"t('form.newPassword')\" class=\"w-full\" :class=\"errors.length && 'border-destructive'\" v-bind=\"componentField\" />\n          </FormControl>\n          <Transition enter-active-class=\"transition-opacity\" enter-from-class=\"opacity-0\" leave-active-class=\"transition-opacity\" leave-to-class=\"opacity-0\">\n            <FormMessage class=\"absolute bottom-1 text-xs\" />\n          </Transition>\n        </FormItem>\n      </FormField>\n      <FaButton :loading=\"loading\" size=\"lg\" class=\"mt-4 w-full\" type=\"submit\">\n        {{ t('form.confirm') }}\n      </FaButton>\n      <div class=\"mt-4 flex-center gap-2 text-sm color-[var(--el-text-color-secondary)]\">\n        <FaButton variant=\"link\" class=\"h-auto p-0\" @click=\"emits('onLogin', form.values.account)\">\n          {{ t('login') }}\n        </FaButton>\n      </div>\n    </form>\n  </div>\n</template>\n","<route lang=\"yaml\">\nmeta:\n  whiteList: true\n  title: 登录\n  constant: true\n  layout: false\n</route>\n\n<script setup lang=\"ts\">\nimport LoginForm from '@/components/AccountForm/LoginForm.vue'\nimport RegisterForm from '@/components/AccountForm/RegisterForm.vue'\nimport ResetPasswordForm from '@/components/AccountForm/ResetPasswordForm.vue'\nimport ColorScheme from '@/layouts/components/Topbar/Toolbar/ColorScheme/index.vue'\nimport Language from '@/layouts/components/Topbar/Toolbar/I18n/index.vue'\nimport useSettingsStore from '@/store/modules/settings'\nimport themes from '../../themes'\n\ndefineOptions({\n  name: 'Login',\n})\n\nconst route = useRoute()\nconst router = useRouter()\nconst settingsStore = useSettingsStore()\n\nconst themeList = computed(() => {\n  return Object.keys(themes).map((key) => {\n    return {\n      label: key as keyof typeof themes,\n      value: (themes as any)[key][settingsStore.currentColorScheme!],\n    }\n  })\n})\n\nconst layoutAlign = ref<'left' | 'center' | 'right'>('center')\nconst redirect = ref(route.query.redirect?.toString() ?? settingsStore.settings.home.fullPath)\nconst account = ref<string>()\n// 表单类型\nconst formType = ref<'login' | 'register' | 'resetPassword'>('login')\n</script>\n\n<template>\n  <div class=\"bg-banner\" />\n  <div class=\"absolute right-4 top-4 z-1 flex-center border rounded-lg bg-background p-1 text-base\">\n    <FaDropdown\n      v-if=\"settingsStore.mode === 'pc'\"\n      :items=\"[[\n        { label: '左侧布局', disabled: layoutAlign === 'left', handle: () => { layoutAlign = 'left' } },\n        { label: '居中布局', disabled: layoutAlign === 'center', handle: () => { layoutAlign = 'center' } },\n        { label: '右侧布局', disabled: layoutAlign === 'right', handle: () => { layoutAlign = 'right' } },\n      ]]\"\n    >\n      <FaButton variant=\"ghost\" size=\"icon\" class=\"h-9 w-9\">\n        <FaIcon\n          :name=\"{\n            left: 'i-icon-park-outline:left-bar',\n            center: 'i-icon-park-outline:square',\n            right: 'i-icon-park-outline:right-bar',\n          }[layoutAlign]\" class=\"size-4\"\n        />\n      </FaButton>\n    </FaDropdown>\n    <Language v-if=\"settingsStore.settings.toolbar.i18n\" tag=\"span\" />\n    <FaPopover class=\"min-w-auto p-0\">\n      <FaButton variant=\"ghost\" size=\"icon\" class=\"h-9 w-9\">\n        <FaIcon name=\"i-mdi:circle\" class=\"text-primary\" />\n      </FaButton>\n      <template #panel>\n        <div class=\"grid grid-cols-3 w-28 gap-2 p-4\">\n          <div v-for=\"item in themeList\" :key=\"item.label\" class=\"m-auto h-5 w-5 flex cursor-pointer items-center justify-center border-2 border-border border-transparent rounded-full text-xs transition-border\" :class=\"{ 'border-primary!': settingsStore.currentColorScheme === 'dark' ? settingsStore.settings.app.darkTheme === item.label : settingsStore.settings.app.lightTheme === item.label }\" @click=\"settingsStore.currentColorScheme === 'dark' ? settingsStore.settings.app.darkTheme = item.label : settingsStore.settings.app.lightTheme = item.label\">\n            <div class=\"h-3 w-3 flex items-center justify-center rounded-full\" :style=\"`background-color: hsl(${item.value['--primary']});`\" />\n          </div>\n        </div>\n      </template>\n    </FaPopover>\n    <ColorScheme v-if=\"settingsStore.settings.toolbar.colorScheme\" />\n  </div>\n  <div class=\"login-box\" :class=\"layoutAlign\">\n    <div class=\"login-banner\">\n      <img src=\"@/assets/images/logo.svg\" class=\"absolute inset-s-4 inset-t-4 h-8 rounded\">\n      <img src=\"@/assets/images/login-banner.png\" class=\"banner\">\n      <FaCopyright v-if=\"settingsStore.mode === 'pc' && ['left', 'right'].includes(layoutAlign)\" />\n    </div>\n    <div class=\"login-form flex-col-center\">\n      <Transition name=\"fade\" mode=\"out-in\">\n        <LoginForm\n          v-if=\"formType === 'login'\"\n          :account\n          @on-login=\"router.push(redirect)\"\n          @on-register=\"(val) => { formType = 'register'; account = val }\"\n          @on-reset-password=\"(val) => { formType = 'resetPassword'; account = val }\"\n        />\n        <RegisterForm\n          v-else-if=\"formType === 'register'\"\n          :account\n          @on-register=\"(val) => { formType = 'login'; account = val }\"\n          @on-login=\"formType = 'login'\"\n        />\n        <ResetPasswordForm\n          v-else-if=\"formType === 'resetPassword'\"\n          :account\n          @on-reset-password=\"(val) => { formType = 'login'; account = val }\"\n          @on-login=\"formType = 'login'\"\n        />\n      </Transition>\n    </div>\n  </div>\n  <FaCopyright v-if=\"settingsStore.mode === 'mobile' || layoutAlign === 'center'\" />\n</template>\n\n<style scoped>\n.bg-banner {\n  position: fixed;\n  z-index: 0;\n  width: 100%;\n  height: 100%;\n  background:\n    radial-gradient(closest-side, hsl(var(--border) / 10%) 30%, hsl(var(--primary) / 20%) 30%, hsl(var(--border) / 30%) 50%) no-repeat,\n    radial-gradient(closest-side, hsl(var(--border) / 10%) 30%, hsl(var(--primary) / 20%) 30%, hsl(var(--border) / 30%) 50%) no-repeat;\n  background-position: 100% 100%, 0% 0%;\n  background-size: 200vw 200vh;\n  filter: blur(100px);\n}\n\n[data-mode=\"mobile\"] {\n  .login-box {\n    position: relative;\n    flex-direction: column;\n    justify-content: start;\n    width: 100%;\n\n    .login-banner {\n      width: 100%;\n      padding: 20px 0;\n\n      .banner {\n        position: relative;\n        top: inherit;\n        right: inherit;\n        display: inherit;\n        width: 100%;\n        max-width: 375px;\n        margin: 0 auto;\n        transform: translateY(0);\n      }\n    }\n\n    .login-form {\n      width: 100%;\n    }\n  }\n\n  .copyright {\n    position: relative;\n  }\n}\n\n.login-box {\n  position: absolute;\n  display: flex;\n  overflow: hidden;\n  background-color: hsl(var(--background));\n\n  [data-mode=\"pc\"] & {\n    &.center {\n      --uno: shadow-md rounded-md;\n\n      top: 50%;\n      left: 50%;\n      transform: translateX(-50%) translateY(-50%);\n    }\n\n    &.left,\n    &.right {\n      width: 100%;\n      height: 100%;\n\n      .login-banner {\n        flex: 1;\n\n        .banner {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          width: 50%;\n          height: 50%;\n          object-fit: contain;\n          transform: translateX(-50%) translateY(-50%);\n        }\n      }\n\n      .login-form {\n        margin: 0 5vw;\n      }\n    }\n\n    &.left {\n      flex-direction: row-reverse;\n    }\n  }\n\n  .login-banner {\n    --uno: bg-muted dark:bg-muted/30;\n\n    position: relative;\n    width: 450px;\n    overflow: hidden;\n\n    &::before {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      content: \"\";\n      background:\n        radial-gradient(closest-side, hsl(var(--border) / 10%) 30%, hsl(var(--primary) / 20%) 30%, hsl(var(--border) / 30%) 50%) no-repeat,\n        radial-gradient(closest-side, hsl(var(--border) / 10%) 30%, hsl(var(--primary) / 20%) 30%, hsl(var(--border) / 30%) 50%) no-repeat;\n      background-position: 100% 100%, 0% 0%;\n      background-size: 200vw 200vh;\n      filter: blur(100px);\n    }\n\n    .banner {\n      position: absolute;\n      top: 50%;\n      width: 100%;\n      transform: translateY(-50%);\n    }\n  }\n\n  .login-form {\n    width: 500px;\n    transition: height 0.15s ease;\n  }\n}\n\n.copyright {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 20px;\n  margin: 0;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.15s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n"],"names":["_imports_0","_imports_1","props","__props","emits","__emit","delegatedProps","computed","_","delegated","forwarded","useForwardPropsEmits","value","_useModel","id","useId","title","t","useI18n","userStore","useUserStore","loading","ref","type","form","useForm","toTypedSchema","z.object","z.string","z.boolean","storage","onSubmit","values","testAccount","account","maxStrength","hasLength","hasUppercase","hasLowercase","hasNumber","hasSpecialChar","strength","score","strengthColor","data","forwardedProps","useForwardProps","emit","modelValue","watch","val","handleComplete","e","countdown","countdownInterval","handleSendCaptcha","route","useRoute","router","useRouter","settingsStore","useSettingsStore","themeList","themes","key","layoutAlign","redirect","_a","formType"],"mappings":"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"}